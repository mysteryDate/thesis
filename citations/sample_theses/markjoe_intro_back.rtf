{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\froman\fcharset0 Palatino-Roman;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww13200\viewh14600\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs26 \cf0 Malloch:
\b0\fs24 \
\
\pard\pardeftab720\sa240

\f1\fs32 \cf0 This chapter is divided into three main sections. The first section examines the grouping and classification of musical instruments, both traditional and digital, in order to provide context for a discussion on digital musical instrument families. The second section explores important issues related to gestural control of music and digital musical instrument design from existing literature. The third section describes several musical interfaces superficially similar to the one developed for this thesis.
\fs24 \

\fs32 A note on terminology: The title of this thesis uses the term \'93gestural musical con- troller\'94 to describe the objects constructed for this project, but it is in fact not my intention to introduce yet another term into the already muddied waters. For the sake of clarity and consistency with other published research, the term \'93digital musical instrument\'94 will be used to describe the entire system (including mapping and synthesis) and \'93gestural con- troller\'94 or \'93physical interface\'94 will be used to describe the hardware elements of that system.\

\b Zadel:\
\pard\pardeftab720\sa240

\f2\b0 \cf0 Live computer music is becoming increasingly feasible in the advent of practicable per- formance software solutions. This chapter surveys available software tools that allow complex, multi-layered computer music to be performed live. We will see that, to vary- ing degrees, these interfaces emphasize the use of prepared material to reduce the com- plexity of the performance task. While effectively managing complexity, this also has the detrimental effect of compromising the performer\'92s on-stage control and flexibility. These examples will serve as lessons for the design of improved computer music per- formance software. Finally, novel interface examples are presented that demonstrate the breadth of creative design possibilities for performance software.
\f1\fs24 \
\
}